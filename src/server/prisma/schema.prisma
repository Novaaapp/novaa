// schema.prisma
generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "sqlite"
  url      = "file:./dev.db"
}

model User {
  id            Int      @id @default(autoincrement())
  name          String
  email         String   @unique
  loggedIn      Boolean  @default(false) 
  hotkey        String   @default("space")
  appearance    String   @default("system")
  defaultModel  String   @default("gemini-flash")
  created_at    DateTime @default(now())
  plan          Plan     @relation(fields: [planId], references: [id])
  planId        Int      @unique
  conversations Conversation[]
}

model Plan {
  id         Int    @id @default(autoincrement())
  name       String @unique
  limit      Int
  used_limit Int    @default(0)
  user       User?
}


model Extension {
  id      Int    @id @default(autoincrement())
  name    String @unique
  enabled Boolean @default(false)
}

model Conversation {
  id        Int       @id @default(autoincrement())
  title     String?
  createdAt DateTime  @default(now())
  user      User      @relation(fields: [userId], references: [id])
  userId    Int
  messages  Message[]
}

model Message {
  id             Int           @id @default(autoincrement())
  role           Role
  content        String?
  toolCall       Json?
  createdAt      DateTime      @default(now())
  conversation   Conversation  @relation(fields: [conversationId], references: [id])
  conversationId Int
  attachments    Attachment[]  // fichiers liés au message
}

model Attachment {
  id         Int      @id @default(autoincrement())
  type       FileType
  url        String   // chemin local ou URL si synchronisé
  name       String?
  message    Message  @relation(fields: [messageId], references: [id])
  messageId  Int
}

enum Role {
  user
  assistant
}

enum FileType {
  image
  document
  audio
  video
  other
}
